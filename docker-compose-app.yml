services:
  eureka-server:
    image: eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - goodsmall-network

  gateway-service:
    image: gateway-service:latest
    container_name: gateway-service
    depends_on:
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "8000:8000"
    networks:
      - goodsmall-network

  cart-service:
    image: cart-service:latest
    container_name: cart-service
    depends_on:
      - mysql
      - redis
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://gm_mysql:3306/cart_service?allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER_NAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "9001:9001"
    networks:
      - goodsmall-network
  order-service:
    image: order-service:latest
    container_name: order-service
    depends_on:
      - mysql
      - redis
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://gm_mysql:3306/order_service?allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER_NAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_KAFKA_BOOTSTRAP_SERVERS: gm_kafka:9092
    ports:
      - "9002:9002"
    networks:
      - goodsmall-network


  product-service:
    image: product-service:latest
    container_name: product-service
    depends_on:
      - mysql
      - redis
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://gm_mysql:3306/product_service?allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER_NAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_KAFKA_BOOTSTRAP_SERVERS: gm_kafka:9092
    ports:
      - "9003:9003"
    networks:
      - goodsmall-network


  user-service:
    image: user-service:latest
    container_name: user-service
    depends_on:
      - mysql
      - redis
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://gm_mysql:3306/user_service?allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER_NAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "9004:9004"
    networks:
      - goodsmall-network

  payment-service:
    image: payment-service:latest
    container_name: payment-service
    depends_on:
      - mysql
      - redis
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_KAFKA_CONSUMER_GROUP_ID: payment-order
      SPRING_DATASOURCE_URL: jdbc:mysql://gm_mysql:3306/payment_service?allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER_NAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_KAFKA_BOOTSTRAP_SERVERS: gm_kafka:9092
    ports:
      - "9005:9005"
    networks:
      - goodsmall-network

networks:
  goodsmall-network:
    driver: bridge